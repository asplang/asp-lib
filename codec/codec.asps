#
# Asp application function specifications - encoding/decoding.
#

lib

# Encode from values to bytes.
# Where possible, numeric values are checked for valid range prior to encoding.
# The encode_str function expands or shrinks the given string to the specified
# field length. The specified fill character is appended during expansion.
def encode_i8(x) = AspLib_encode_i8
def encode_u8(x) = AspLib_encode_u8
def encode_i16be(x) = AspLib_encode_i16be
def encode_i16le(x) = AspLib_encode_i16le
def encode_u16be(x) = AspLib_encode_u16be
def encode_u16le(x) = AspLib_encode_u16le
def encode_i32be(x) = AspLib_encode_i32be
def encode_i32le(x) = AspLib_encode_i32le
def encode_f32be(x) = AspLib_encode_f32be
def encode_f32le(x) = AspLib_encode_f32le
def encode_f64be(x) = AspLib_encode_f64be
def encode_f64le(x) = AspLib_encode_f64le
def encode_str(s, len, fill = '\0') = AspLib_encode_str

# Decode from bytes to values.
# For numeric decoding, the given strings must be of the expected length.
# For the decode_str function, the decoded string contains only bytes up to
# but not including any null byte encountered.
def decode_i8(s) = AspLib_decode_i8
def decode_u8(s) = AspLib_decode_u8
def decode_i16be(s) = AspLib_decode_i16be
def decode_i16le(s) = AspLib_decode_i16le
def decode_u16be(s) = AspLib_decode_u16be
def decode_u16le(s) = AspLib_decode_u16le
def decode_i32be(s) = AspLib_decode_i32be
def decode_i32le(s) = AspLib_decode_i32le
def decode_f32be(s) = AspLib_decode_f32be
def decode_f32le(s) = AspLib_decode_f32le
def decode_f64be(s) = AspLib_decode_f64be
def decode_f64le(s) = AspLib_decode_f64le
def decode_str(s) = AspLib_decode_str
